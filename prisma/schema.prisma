// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Producto {
  id Int @id @default(autoincrement())
  nombre String
  precio Float
  costo Float
  imagen String 
  descripcion String
  iva Float
  categoria Categoria @relation( fields: [categoriaId], references: [id] )
  categoriaId Int
  proveedor Proveedor @relation( fields: [proveedorId], references: [id] )
  proveedorId Int
  inventario Int
  productosCompra ProductosCompra[]
  carrito Carrito[]
}

model Categoria {
  id Int @id @default(autoincrement())
  nombre String 
  icono String 
  productos Producto[]
}

model Proveedor {
  id Int @id @default(autoincrement())
  nombre String
  productos Producto[]
}

model Usuario {
  id Int @id @default(autoincrement())
  nombre String
  apellido String
  correo String @unique
  password String
  numero String
  token String
  confirmado Boolean @default(false)
  calleNumero String 
  colonia String 
  codigoPostal Int 
  ciudad String 
  estado String 
  admin Boolean @default(false)
  compras Compra[]
  carrito Carrito[]
}

model Compra {
  id Int @id @default(autoincrement())
  fecha DateTime
  total Float
  usuarioId Int
  productosCompra ProductosCompra[]
  envio Envio[]
  usuario Usuario @relation( fields: [usuarioId], references: [id] )
}

model ProductosCompra {
  id Int @id @default(autoincrement())
  productoId Int
  cantidad Int
  compraId Int
  producto Producto @relation( fields: [productoId], references: [id] )
  compra Compra @relation( fields: [compraId], references: [id] )
}

model Envio {
  id Int @id @default(autoincrement())
  compra Compra @relation( fields: [compraId], references: [id] )
  compraId Int
  paqueteria Boolean
  enviado Boolean
  puntoEnvio Boolean
  entregado Boolean
}

// CARRITO
model Carrito {
  id Int @id @default(autoincrement())
  usuario Usuario @relation( fields: [usuarioId], references: [id] )
  usuarioId Int
  producto Producto @relation( fields: [productoId], references: [id] )
  productoId Int
  cantidadOProductos Int
  subtotal Float
  fecha String
}


model PaypalToken {
  id Int @id @default(autoincrement())
  orderId String
  payerId String
  paymentId String
  facilitatorAccesToken String
}